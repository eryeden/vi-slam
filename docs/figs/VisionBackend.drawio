<mxfile host="www.draw.io" modified="2020-05-17T02:09:24.762Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36" etag="Q_5hd2Z8D_q3H1FXrSBv" version="13.1.2" type="github" pages="2">
  <diagram id="mYV5fHMhs3SO6_IcKCSN" name="Page-1">
    <mxGraphModel dx="1941" dy="1277" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="8OQvFZ2Zipv02wQBPf4X-1" value="&lt;h1&gt;Vision-Backend&lt;/h1&gt;&lt;p&gt;Vision backendについていろいろまとめてみた。&lt;br&gt;基本はGTSAM、iSAM2について。&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="20" y="40" width="190" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="CG2pjZPTrM2GcYqYaMGn" name="GTSAM">
    <mxGraphModel dx="2276" dy="1472" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="1" shadow="0">
      <root>
        <mxCell id="malhQMyiqFlj0tt06wjK-0" />
        <mxCell id="malhQMyiqFlj0tt06wjK-1" parent="malhQMyiqFlj0tt06wjK-0" />
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-31" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;verticalAlign=top;aspect=fixed;imageAspect=0;image=https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/MultivariateNormal.png/300px-MultivariateNormal.png;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="1006" y="870" width="181.05" height="137" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-0" value="&lt;h1&gt;GTSAM&lt;/h1&gt;&lt;p&gt;iSAM2をVision backendに使う予定である。iSAM2はGTSAM内に実装されているらしいので、この使い方をメモしておく。&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="20" y="40" width="730" height="80" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-1" value="参考：&lt;br&gt;&lt;a href=&quot;https://gtsam.org/tutorials/intro.html&quot;&gt;https://gtsam.org/tutorials/intro.html&lt;/a&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="20" y="120" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-2" value="基本の登場人物&lt;br&gt;- Fractor graph&lt;br&gt;&lt;div&gt;- Variables : 推定したい値&lt;/div&gt;&lt;div&gt;- Factors：Variableに対する確率的な拘束条件、ここに観測値や、観測モデルが入っていくる。&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="10" y="170" width="520" height="60" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-3" value="Factor Graphってなに？&lt;br&gt;&lt;br&gt;隠れマルコフモデル（HMM）というのが元になっているらしい。&lt;br&gt;隠れマルコフモデルは、モデルの内部状態が直接観測できない状態繊維モデルのことらしい。&lt;br&gt;考えて見ると、GTSAMで扱いたい問題はほとんどHMMになりそうだ。&lt;br&gt;VSLAMや位置推定であっても、ロボットの本当のPoseは直接観測できない場合がほとんど。センサにノイズが乗っていたり、積分が必要だったり。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="10" y="585" width="810" height="90" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-4" value="個人的に…&lt;br&gt;この先、確率の話が大量に登場する。いつも確率の話が出てくると、&lt;br&gt;実際の数式、計算の処理に結びつけて理解できなくなる。どうにか抽象的な話を&lt;br&gt;プログラムとして記述できる具体的な話として変換しつつ進めていきたい。&lt;br&gt;とりあえず、現状の確率というものの理解を下に書いておく。&lt;br&gt;&lt;br&gt;\( X_1 \) の意味は？&lt;br&gt;何らかの数値、物理量などがこの \( X_1 \) として表現される。&lt;br&gt;普通の変数との違いは、 \( P(X_1) \) となったときに確率が出力されること。&lt;br&gt;&lt;br&gt;&lt;br&gt;\( P(X_1) \)の意味は？ \( X_1 \) との違いは？&lt;br&gt;\(X_1 \)はなんらかの値（物理量など）を示す。&lt;br&gt;\( P(X_1) \) は\(X_1\)が、ある値1や2などを撮る場合の確率を示す。&lt;br&gt;なのでよくある正規分布の図は、横軸\(X_1\)、縦軸\( P(X_1) \)になる。&lt;br&gt;&lt;br&gt;とりあえず、ある現象をモデル化するときに、&lt;br&gt;背後にある複雑、モデル化困難なメカニズムを簡単にモデル化する手法として、&lt;br&gt;すべての出力値に値の出やすさという数値を関連付けるという単純な方法があって、&lt;br&gt;これが確率変数、確率密度関数というものであると、理解しておく…とりあえず。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="10" y="260" width="470" height="290" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-9" value="" style="endArrow=classic;html=1;" edge="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="540" y="510" as="sourcePoint" />
            <mxPoint x="820" y="510" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-10" value="" style="endArrow=classic;html=1;" edge="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="540" y="510" as="sourcePoint" />
            <mxPoint x="540" y="360" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-11" value="\( X_1 \)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="650" y="520" width="60" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-12" value="\( P(X_1) \)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="460" y="415" width="70" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-13" value="" style="endArrow=none;html=1;" edge="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="570" y="490" as="sourcePoint" />
            <mxPoint x="790" y="490" as="targetPoint" />
            <Array as="points">
              <mxPoint x="640" y="460" />
              <mxPoint x="670" y="380" />
              <mxPoint x="700" y="460" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-14" value="このグラフの形はいかようにも変えることができ、&lt;br&gt;この形一つによって、数式として書き下すことが困難な&lt;br&gt;現象であっても表現できる、、、、という理解です" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="740" y="385" width="310" height="50" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-15" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;verticalAlign=top;aspect=fixed;imageAspect=0;image=https://gtsam.org/tutorials/intro-images/2_Users_dellaert_git_github_doc_images_hmm.png;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="150" y="710" width="398.2" height="170" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-16" value="HMM" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="329.1" y="880" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-17" value="HMMの模式図。&lt;br&gt;観測値は\( Z_{1,2,3,...} \)&lt;br&gt;内部状態は\( X_{1,2,3,...} \)&lt;br&gt;ここでの変数は全て確率変数らしい" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="540" y="765" width="210" height="60" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-19" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.342;entryY=0.294;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="malhQMyiqFlj0tt06wjK-1" source="y6ONzhfBYeOvc6R4NJ2u-18" target="y6ONzhfBYeOvc6R4NJ2u-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-18" value="矢印は条件付き確率密度関数に相当するらしい" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="40" y="702" width="270" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-20" value="\( P(X_2 | X_1) \)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="230" y="720" width="110" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-21" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;verticalAlign=top;aspect=fixed;imageAspect=0;image=https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Multivariate_Gaussian.png/300px-Multivariate_Gaussian.png;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="808.83" y="710" width="172.34" height="108" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-22" value="\( P(Y|X) \)の話&lt;br&gt;たぶんだが、&lt;br&gt;Xの値が決まれば、Xの値の平面で&lt;br&gt;図形をスライスして、その断面が、Xの値が決まった時の&lt;br&gt;Yの確率密度関数になっているのだろうな。&lt;br&gt;Y自体の確率密度関数がわかれば、Yで一番出力する確率が高い値がわかる（平均値とか？）&lt;br&gt;その値を推定値として、偉い人に教えるなど、ここで初めて利用価値が生まれる気がする。&lt;br&gt;&lt;br&gt;\( P(Y|X=3) = P_{X=3}(Y) \)のように、Xの値が決まっときに&lt;br&gt;ただの確率密度関数になるとおしえられたが、その話がようやくわかった気がする。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="1006" y="620" width="510" height="150" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-23" value="" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;align=left;rotation=-90;size=0.2433392122281001;flipH=1;fillColor=none;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="824.12" y="702" width="141.75" height="66.25" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-24" value="Xが決まると&lt;br&gt;この平面で凸をスライスできる" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="808.83" y="630" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-25" value="" style="endArrow=none;html=1;entryX=0.25;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="malhQMyiqFlj0tt06wjK-1" source="y6ONzhfBYeOvc6R4NJ2u-23" target="y6ONzhfBYeOvc6R4NJ2u-23">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="850" y="870" as="sourcePoint" />
            <mxPoint x="900" y="820" as="targetPoint" />
            <Array as="points">
              <mxPoint x="880" y="790" />
              <mxPoint x="895" y="750" />
              <mxPoint x="910" y="771" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-26" value="\( P(Z_1 | X_1) \)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="139" y="780" width="100" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-28" value="\( P(X, Y) \)をプロットした例" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="813.83" y="830" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-30" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.775;entryY=0.466;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="malhQMyiqFlj0tt06wjK-1" source="y6ONzhfBYeOvc6R4NJ2u-29" target="y6ONzhfBYeOvc6R4NJ2u-23">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="950" y="815" />
              <mxPoint x="950" y="774" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.271;entryY=0.314;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="malhQMyiqFlj0tt06wjK-1" source="y6ONzhfBYeOvc6R4NJ2u-29" target="y6ONzhfBYeOvc6R4NJ2u-31">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1140" y="830" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-29" value="\( P(Y|X) \)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="1020" y="805" width="70" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-33" value="これをXに沿って積分すると\( P(Y) \)になる。&lt;br&gt;この操作を周辺化、Marginalizationというらしい。（噂の）&lt;br&gt;用語が難しいがやっていることはほしい確率変数以外を消去するため、&lt;br&gt;全パターン足しこんでいるだけ。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="1110" y="800" width="400" height="60" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-34" value="↓式の面では疑問はあるが、イメージ、意味合い的には正しいはず" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="871" y="590" width="370" height="20" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-35" value="↑のHMMは、あくまでも現象をどうモデル化するかという話。&lt;br&gt;やりたいことは、HMMでは隠されているモデルの内部状態 \( X_1, X_2, X_3 \)を求めること。&lt;br&gt;ここは、\( P(X_1, X_2, X_3 | Z_1 = z_1, Z_2 = z_2, Z_3 = z_3) \)である条件付き確率密度関数が、&lt;br&gt;\( z_1, z_2, z_3 \) という値が観測されたときのシステム状態の確率密度関数として、&lt;br&gt;このP(~)がのピークになている\(X_1, X_2, X_3 \)の値を求めることをこれからやっていく。&lt;br&gt;&lt;br&gt;じゃあ、\( P(X_1, X_2, X_3 | Z_1 = z_1, Z_2 = z_2, Z_3 = z_3) \)はどういう式で、具体的にそういった計算をしたらいいの？&lt;br&gt;という話に繋がっていく。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="10" y="930" width="690" height="120" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-37" value="&lt;span&gt;↓の結果になるらしい。&lt;br&gt;\( P(X_1, X_2, X_3 | Z_1 = z_1, Z_2 = z_2, Z_3 = z_3) \propto P(X_1) P(X_2|X_1) P(X_3 | X_2) L(X_1;z_1) L(X_2; z_2) L(X_3; z_3) \)&lt;br&gt;&lt;/span&gt;\( P(X_1) P(X_2|X_1) P(X_3 | X_2) \) : ここはHMMの状態遷移から求まる&lt;br&gt;\( L(X_1;z_1) L(X_2; z_2) L(X_3; z_3) \) : ここは観測値から求める部分&lt;span&gt;&lt;br&gt;&lt;br&gt;\( L(X_1; z_1) \) だが、おそらくベイズ則から求まる。HMMの図から立式すれば、普通に考えて↓のようになるはず。&lt;br&gt;&lt;/span&gt;\( P(X_1, X_2, X_3 | Z_1 = z_1, Z_2 = z_2, Z_3 = z_3) \propto P(X_1) P(X_2|X_1) P(X_3 | X_2) P(Z_1 | X_1) P(Z_2 | X_2) P(Z_3 | X_3) \)&lt;br&gt;&lt;br&gt;&lt;span&gt;ここから、\(P(Z_i | X_i)\)を変形する。&lt;br&gt;\(P(Z_i | X_i) = \frac{P(X_i | Z_i) P(Z_i)}{P(X_i)} \propto P(X_i | Z_i) P(Z_i) = L(X_i ; Z_i = z_i) ????\)&lt;br&gt;&lt;br&gt;&lt;/span&gt;\(P(X_i | Z_i) \)&lt;span&gt;はセンサモデルとして記述できて、利用者が勝手に計算式を設定できる部分と考える。尤度というらしい。&lt;br&gt;\( P(Z_i) \)は\( Z_i \)の事前確率と呼ばれているらしいが、なんのことなのかよくわからない。センサがどの値をどれくらいの確率で出力するかなんてことを&lt;br&gt;なにも情報がない（観測値や内部状態の仮定）状態で計算や仮定することができるのか？\(P(X_i | Z_i) \)はなんとなく納得できるが\( P(Z_i) \)はよくわからない。&lt;br&gt;\( P(X_i) \)は式としては定数なので無視するらしいとよく書かれている、よくわからない。&lt;br&gt;\(P(X_i)\)が定数として省略できるなら、\( P(Z_i) \)も定数となるので消してもいいのではないか？そこのところが全くわからない。&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="10" y="1100" width="970" height="220" as="geometry" />
        </mxCell>
        <mxCell id="y6ONzhfBYeOvc6R4NJ2u-38" value="\( P(Y |X) = P(X, Y) / P(X) \)についてメモ&lt;br&gt;&lt;br&gt;ここで登場する\( P(X) \)は周辺化されたP(X)である。&lt;br&gt;この式は確率変数にある値が入った、上図の一点の値について記述していると考えたほうがわかりやすい気がする。&lt;br&gt;つまり、上図のx = 2, y = 3とか具体的な数字が設定された状態で、&lt;br&gt;\( P(Y = y | X = x) = P(X = x, Y = y) / P(X = x) \)&lt;br&gt;が成り立っているということ。&lt;br&gt;&lt;br&gt;一番の疑問である、なぜ割るのか？ということだが、 \( P(Y | X) \)をY方向に積分して合計1にならないから。&lt;br&gt;\( P(X, Y) \)は、X, Y方向に２D積分すると１になるが、\( P(Y | X) \)は \( P(X, Y) \)の一部をスライスしただけなので、&lt;br&gt;変数Y（ \( P(Y | X) \) ではXは定数扱い）の全区間で積分しても１にならず確率の定義を満たさないらしい。&lt;br&gt;これを解消するためのスケーリングパラメータとしての \(1/ P(X) \)がある。&lt;br&gt;&lt;br&gt;ここまででわかったこととしては、\( P(X) \)の意味合いが結構変わってわかりにくいということ。&lt;br&gt;パターンは２つある。&lt;br&gt;1. \(X\)は取りうる地域全てを表現しており、\( P(X) \)は確率分布の形か何かを表現しているパターン&lt;br&gt;2. \(X\)は代入された後の変数のように値が確定していて、\( P(X) \)はその値の出現する確率の値（これも具体的な値）を表現している&lt;br&gt;上級者から見たら一緒の話なのかもしれないが、少なくともこの段階で俺は結構混乱した。" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="malhQMyiqFlj0tt06wjK-1">
          <mxGeometry x="1006" y="1060" width="810" height="250" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
